import psycopg2

def tables():
  
  commands = [
    'CREATE TABLE IF NOT EXISTS HotelChains (ChainID INTEGER NOT NULL, Email VARCHAR(50) NOT NULL, PRIMARY KEY (ChainID));',
    'CREATE TABLE IF NOT EXISTS HotelChains_PhoneNumber (ChainID INT, PhoneNumber VARCHAR(50), PRIMARY KEY (ChainID, PhoneNumber), FOREIGN KEY (ChainID) REFERENCES HotelChains (ChainID));',
    'CREATE TABLE IF NOT EXISTS HotelChain_OfficeAddress (ChainID INT, Street VARCHAR(50) NOT NULL, City VARCHAR(50) NOT NULL, Province VARCHAR(50) NOT NULL, PostalCode VARCHAR(50) NOT NULL, Primary Key (ChainId, Street, City, Province, PostalCode), Foreign Key (ChainID) REFERENCES HotelChains (ChainID));'
    'CREATE TABLE IF NOT EXISTS HOTEL(HotelID INTEGER NOT NULL,ChainID INTEGER NOT NULL,Street Varchar(50) NOT NULL,City VarChar(50) NOT NULL,Province Varchar(50) NOT NULL,PostalCode VarChar(50) NOT NULL,Email VARCHAR(50) NOT NULL,NumberOfRooms INTEGER,Rating INTEGER CHECK (Rating>=0 AND Rating <=5),PRIMARY KEY(HotelID),FOREIGN KEY(ChainID) REFERENCES HotelChains(ChainID));'
    'CREATE TABLE IF NOT EXISTS Hotel_PhoneNumber( HotelID INTEGER NOT NULL, PhoneNumber VARCHAR(50), PRIMARY KEY(HotelID,PhoneNumber), FOREIGN KEY(HotelID) REFERENCES Hotel(HotelID) );'
    'CREATE TABLE IF NOT EXISTS Room( RoomNumber INTEGER NOT NULL, HotelID INTEGER NOT NULL, Extendable BOOL NOT NULL, Capacity VARCHAR(50) NOT NULL, SeaView BOOL NOT NULL, Price VarChar(10), PRIMARY KEY(RoomNumber,HotelID), FOREIGN KEY(HotelID) REFERENCES Hotel(HotelID) );'  
    'CREATE TABLE IF NOT EXISTS Damages( RoomNumber INTEGER NOT NULL, HotelID INTEGER NOT NULL, Damages BOOL NOT NULL, PRIMARY KEY(RoomNumber,HotelID,Damages), FOREIGN KEY(RoomNumber,HotelID) REFERENCES Room(RoomNumber,HotelID) );'
    'CREATE TABLE IF NOT EXISTS RoomAmenities( RoomNumber INTEGER NOT NULL, HotelID INTEGER NOT NULL, Amenities VarChar(40) NOT NULL, PRIMARY KEY(RoomNumber,HotelID,Amenities), FOREIGN KEY(RoomNumber,HotelID) REFERENCES Room(RoomNumber,HotelID) );'
    'CREATE TABLE IF NOT EXISTS Employee( EmployeeSSN INTEGER NOT NULL, HotelID INTEGER NOT NULL, FirstName VARCHAR(50) NOT NULL, LastName VARCHAR(50) NOT NULL, Street VARCHAR(50) NOT NULL, City VARCHAR(50) NOT NULL, Province VARCHAR(50) NOT NULL, PostalCode VARCHAR(50) NOT NULL, Position VARCHAR(50) NOT NULL, PRIMARY KEY(EmployeeSSN), FOREIGN KEY(HotelID) REFERENCES Hotel(HotelID) );'
    'CREATE TABLE IF NOT EXISTS Employee_PhoneNumber( EmployeeSSN INTEGER NOT NULL, PhoneNumber VarChar(50) NOT NULL, PRIMARY KEY(EmployeeSSN,PhoneNumber), FOREIGN KEY(EmployeeSSN) REFERENCES Employee(EmployeeSSN) );'
    'CREATE TABLE IF NOT EXISTS Customer( CustomerSSN INTEGER NOT NULL, FirstName VARCHAR(50) NOT NULL, LastName VARCHAR(50) NOT NULL, Street VARCHAR(50) NOT NULL, City VARCHAR(50) NOT NULL, Province VARCHAR(50) NOT NULL, PRIMARY KEY(CustomerSSN) );'
    'CREATE TABLE IF NOT EXISTS Customer_PhoneNumber( CustomerSSN INTEGER NOT NULL, PhoneNumber VARCHAR(50) NOT NULL, PRIMARY KEY(CustomerSSN,PhoneNumber), FOREIGN KEY(CustomerSSN) REFERENCES Customer(CustomerSSN) );'
    'CREATE TABLE IF NOT EXISTS Check_In( Check_In_ID INTEGER NOT NULL, HotelID INTEGER NOT NULL, CustomerSSN INTEGER NOT NULL, EmployeeSSN INTEGER NOT NULL, RoomNumber INTEGER NOT NULL, Check_In_Time TIMESTAMP, Check_Out_Time TIMESTAMP, RoomInfo TEXT, CustomerInfo TEXT, PRIMARY KEY(Check_In_ID), FOREIGN KEY(CustomerSSN) REFERENCES Customer(CustomerSSN), FOREIGN KEY(EmployeeSSN) REFERENCES Employee(EmployeeSSN), FOREIGN KEY(RoomNumber,HotelID) REFERENCES Room(RoomNumber,HotelID) );'
    'CREATE TABLE IF NOT EXISTS Book( Booking_ID INTEGER NOT NULL, CustomerSSN INTEGER NOT NULL, HotelID INTEGER NOT NULL, RoomNumber INTEGER NOT NULL, StayDuration INTEGER, BookingDate DATE, RoomInfo TEXT, CustomerInfo TEXT, FOREIGN KEY(CustomerSSN) REFERENCES Customer(CustomerSSN), FOREIGN KEY(HotelID,RoomNumber) REFERENCES Room(HotelID,RoomNumber) );'
    'CREATE TABLE IF NOT EXISTS Booking_Archives( Booking_ID INTEGER NOT NULL, CustomerSSN INTEGER NOT NULL, HotelID INTEGER NOT NULL, RoomNumber INTEGER NOT NULL, StayDuration INTEGER, BookingDate DATE, RoomInfo TEXT, CustomerInfo TEXT, FOREIGN KEY(CustomerSSN) REFERENCES Customer(CustomerSSN), FOREIGN KEY(HotelID,RoomNumber) REFERENCES Room(HotelID,RoomNumber) );'
  ]
  try:
    conn=psycopg2.connect(database='eHotels',user='postgres',
                      password='postgres',host='localhost',port='5433')
 
    cur=conn.cursor()
    for command in commands:
      cur.execute(command)
    conn.commit()
    cur.execute(f"SELECT * FROM hotelchains WHERE chainid={11}")
    check_si_db_est_vide=cur.fetchall()
    print(len(check_si_db_est_vide))
    print(check_si_db_est_vide)
    if len(check_si_db_est_vide)==0:
      cur.execute("INSERT INTO hotelchains(chainid, email) VALUES (11, 'info@luxhotels.com'), (22, 'info@serenity.com'), (33, 'info@suites.com'), (44, 'info@lodgings.com'), (55,'info@tranquilbliss.com');")
      cur.execute("INSERT INTO hotelchains_phonenumber(chainid,phonenumber) VALUES (11,'(555) 123-4567'), (22,'(555) 987-6543'), (33,'(555) 876-5432'), (44,'(555) 234-5678'), (55,'(555)342-5164');")
      cur.execute("INSERT INTO hotelchain_officeaddress (chainid, street, city, province, postalcode) VALUES (11, '123 Main Street', 'Metropolis', 'Metropolitan', 'M12345'), (22, '456 Elm Avenue', 'Vista City', 'Serenity Province', 'S67890'), (33, '789 Oak Boulevard', 'Tranquilville', 'Harmony State', 'H54321'), (44, '321 Pine Road', 'Stargaze Town', 'Celestial Region', 'C98765'), (55, '897 Tranquil Lane', 'Blissville', 'Harmony Springs', 'X1Y7Z9');")
      cur.execute("INSERT INTO hotel(hotelid, chainid, street, city, province, postalcode, email, numberofrooms, rating) VALUES (1, 11, '123 LuxeVista Lane', 'Metropolis', 'Metropolitan', 'M12345', 'info@luxevistahotels.com', 100, 5), (2, 11, '456 Boulevard Avenue', 'Metro City', 'Metropolitan', 'M56789', 'info@luxevistahotels.com', 120, 5), (3, 11, '789 LuxeVista Street', 'Urbanville', 'Metropolitan', 'M98765', 'info@luxevistahotels.com', 80, 4), (4, 11, '101 LuxeVista Drive', 'City Center', 'Metropolitan', 'M54321', 'info@luxevistahotels.com', 150, 4), (17, 11, '321 Tranquility Avenue', 'Serenity Springs', 'Serenity Province', 'S24680', 'info@serenitystayresorts.com', 95, 4), (18, 11, '654 Harmony Street', 'Calmville', 'Serenity Province', 'S13579', 'info@serenitystayresorts.com', 105, 3), (19, 11, '987 Bliss Drive', 'Zenith City', 'Serenity Province', 'S11223', 'info@serenitystayresorts.com', 85, 4), (29, 11, '555 Serenity Circle', 'Tranquil Springs', 'Serenity Province', 'S55555', 'info@serenitystayresorts.com', 85, 4), (5, 22, '123 Serenity Lane', 'Vista City', 'Serenity Province', 'S12345', 'info@serenitystayresorts.com', 90, 3), (6, 22, '456 Tranquil Avenue', 'Serenity Town', 'Serenity Province', 'S67890', 'info@serenitystayresorts.com', 110, 3), (7, 22, '789 Bliss Boulevard', 'Peaceville', 'Serenity Province', 'S54321', 'info@serenitystayresorts.com', 130, 4), (8, 22, '101 Serenity Drive', 'Calm City', 'Serenity Province', 'S98765', 'info@serenitystayresorts.com', 100, 3), (20, 22, '321 Harmony Lane', 'Peacefulville', 'Serenity Province', 'S13245', 'info@serenitystayresorts.com', 120, 4), (21, 22, '654 Calm Street', 'Tranquility Town', 'Serenity Province', 'S98765', 'info@serenitystayresorts.com', 110, 3), (22, 22, '987 Zenith Drive', 'Blissville', 'Serenity Province', 'S67890', 'info@serenitystayresorts.com', 100, 4), (33, 22, '555 Harmony Circle', 'Tranquil City', 'Serenity Province', 'S11111', 'info@serenitystayresorts.com', 100, 4), (9, 33, '123 Harmony Lane', 'Tranquilville', 'Harmony State', 'H12345', 'info@harmonyhavensuites.com', 70, 3), (10, 33, '456 Calm Avenue', 'Zen City', 'Harmony State', 'H67890', 'info@harmonyhavensuites.com', 90, 5), (11, 33, '789 Peace Boulevard', 'Harmony Haven', 'Harmony State', 'H54321', 'info@harmonyhavensuites.com', 80, 4), (12, 33, '101 Tranquility Drive', 'Calmville', 'Harmony State', 'H98765', 'info@harmonyhavensuites.com', 110, 4), (23, 33, '321 Harmony Avenue', 'Peaceful City', 'Harmony State', 'H11223', 'info@harmonyhavensuites.com', 75, 4), (24, 33, '654 Tranquil Street', 'Calm Town', 'Harmony State', 'H98765', 'info@harmonyhavensuites.com', 85, 5), (25, 33, '987 Peace Drive', 'Tranquility City', 'Harmony State', 'H54321', 'info@harmonyhavensuites.com', 95, 3), (37, 33, '555 Harmony Drive', 'Calm Springs', 'Harmony State', 'H22334', 'info@harmonyhavensuites.com', 80, 4), (13, 44, '123 Celestial Lane', 'Stargaze Town', 'Celestial Region', 'C12345', 'info@celestialluxelodgings.com', 120, 3), (14, 44, '456 Stellar Avenue', 'Galaxy City', 'Celestial Region', 'C67890', 'info@celestialluxelodgings.com', 140, 4), (15, 44, '789 Cosmic Boulevard', 'Starlight City', 'Celestial Region', 'C54321', 'info@celestialluxelodgings.com', 100, 5), (16, 44, '101 Nebula Drive', 'Cosmos Town', 'Celestial Region', 'C98765', 'info@celestialluxelodgings.com', 130, 3), (26, 44, '321 Celestial Avenue', 'Stargazer Town', 'Celestial Region', 'C24680', 'info@celestialluxelodgings.com', 125, 4), (27, 44, '654 Stellar Street', 'Galactic City', 'Celestial Region', 'C13579', 'info@celestialluxelodgings.com', 115, 5), (28, 44, '987 Cosmic Drive', 'Star City', 'Celestial Region', 'C11223', 'info@celestialluxelodgings.com', 105, 4), (41, 44, '555 Celestial Circle', 'Stargaze Springs', 'Celestial Region', 'C55555', 'info@celestialluxelodgings.com', 130, 4), (50, 55, '123 Tranquil Haven', 'Calmville', 'Harmony State', 'H12345', 'info@harmonyhavensuites.com', 80, 4), (51, 55, '456 Serene Lane', 'Zen City', 'Harmony State', 'H67890', 'info@harmonyhavensuites.com', 90, 5), (52, 55, '789 Peaceful Avenue', 'Harmony Haven', 'Harmony State', 'H54321', 'info@harmonyhavensuites.com', 100, 3), (53, 55, '101 Blissful Drive', 'Calmville', 'Harmony State', 'H98765', 'info@harmonyhavensuites.com', 110, 4), (54, 55, '123 Serene View', 'Vista City', 'Serenity Province', 'S12345', 'info@serenitystayresorts.com', 90, 3), (55, 55, '456 Tranquil Road', 'Serenity Town', 'Serenity Province', 'S67890', 'info@serenitystayresorts.com', 110, 3), (56, 55, '789 Blissful Way', 'Peaceville', 'Serenity Province', 'S54321', 'info@serenitystayresorts.com', 130, 4), (57, 55, '101 Serenity Trail', 'Calm City', 'Serenity Province', 'S98765', 'info@serenitystayresorts.com', 100, 3);")
      cur.execute("INSERT INTO hotel_phonenumber(hotelid, phonenumber) VALUES (1, '(555) 123-4567'), (1, '(555) 234-5678'), (2, '(555) 987-6543'), (2, '(555) 876-5432'), (3, '(555) 789-0123'), (3, '(555) 890-1234'), (4, '(555) 234-5678'), (4, '(555) 345-6789'), (5, '(555) 456-7890'), (5, '(555) 567-8901'), (6, '(555) 678-9012'), (6, '(555) 789-1234'), (7, '(555) 234-5678'), (7, '(555) 345-6789'), (8, '(555) 456-7890'), (8, '(555) 567-8901'), (9, '(555) 901-2345'), (9, '(555) 012-3456'), (10, '(555) 234-5678'), (10, '(555) 345-6789'), (11, '(555) 456-7890'), (11, '(555) 567-8901'), (12, '(555) 678-9012'), (12, '(555) 789-1234'), (13, '(555) 234-5678'), (13, '(555) 345-6789'), (14, '(555) 456-7890'), (14, '(555) 567-8901'), (15, '(555) 901-2345'), (15, '(555) 012-3456'), (16, '(555) 234-5678'), (16, '(555) 345-6789');")
      cur.execute("INSERT INTO Hotel_PhoneNumber(hotelid, phonenumber) VALUES (50, '123-456-7890'), (51, '234-567-8901'), (52, '345-678-9012'), (53, '456-789-0123'), (54, '567-890-1234'), (55, '678-901-2345'), (56, '789-012-3456'), (57, '890-123-4567');")
      cur.execute("INSERT INTO Room (RoomNumber, HotelID, Extendable, Capacity, SeaView, Price) VALUES (1, 1, 'yes', 'single', 'yes', '100'), (2, 1, 'yes', 'double', 'yes', '120'), (3, 1, 'yes', 'single', 'no', '105'), (4, 1, 'yes', 'triple', 'no', '125'), (5, 1, 'no', 'single', 'yes', '110'), (6, 1, 'no', 'double', 'yes', '130'), (7, 1, 'no', 'single', 'no', '115'), (8, 1, 'no', 'triple', 'no', '135'), (9, 1, 'yes', 'single', 'yes', '115'), (10,1, 'yes', 'double', 'yes', '135'), (11,1, 'yes', 'triple', 'no', '120'), (12,1, 'yes', 'double', 'no', '140'), (13,1, 'no', 'single', 'yes', '125'), (14, 1, 'no', 'triple', 'yes', '145'), (15, 1, 'no', 'single', 'no', '130'), (16, 1, 'no', 'double', 'no', '150'), (17, 1, 'yes', 'single', 'yes', '105'), (18, 1, 'yes', 'double', 'yes', '125'), (19, 1, 'yes', 'single', 'no', '110'), (20, 1, 'yes', 'double', 'no', '130'), (21, 1, 'no', 'triple', 'yes', '115'), (22, 1, 'no', 'double', 'yes', '135'), (23, 1, 'no', 'single', 'no', '120'), (24, 1, 'no', 'double', 'no', '140'), (25, 1, 'yes', 'single', 'yes', '120'), (26, 1, 'yes', 'triple', 'yes', '140'), (27, 1, 'yes', 'single', 'no', '125'), (28, 1, 'yes', 'double', 'no', '145'), (29, 1, 'no', 'single', 'yes', '130'), (30, 1, 'no', 'double', 'yes', '150'), (31, 1, 'no', 'triple', 'no', '135'), (32, 1, 'no', 'double', 'no', '155'), (33, 1, 'yes', 'single', 'yes', '130'), (34, 1, 'yes', 'double', 'yes', '150'), (35, 1, 'yes', 'triple', 'no', '135'), (36, 1, 'yes', 'double', 'no', '155'), (37, 1, 'no', 'single', 'yes', '140'), (38, 1, 'no', 'double', 'yes', '160'), (39, 1, 'no', 'triple', 'no', '145'), (40, 1, 'no', 'double', 'no', '165'), (41, 1, 'yes', 'single', 'yes', '135'), (42, 1, 'yes', 'double', 'yes', '155'), (43, 1, 'yes', 'single', 'no', '140'), (44, 1, 'yes', 'triple', 'no', '160'), (45, 1, 'no', 'single', 'yes', '145'), (46, 1, 'no', 'double', 'yes', '165'), (47, 1, 'no', 'single', 'no', '150'), (48, 1, 'no', 'triple', 'no', '170'), (49, 1, 'yes', 'single', 'yes', '140'), (50, 1, 'yes', 'double', 'yes', '160'), (51, 1, 'yes', 'single', 'no', '145'), (52, 1, 'yes', 'triple', 'no', '165'), (53, 1, 'no', 'single', 'yes', '150'), (54, 1, 'no', 'double', 'yes', '170'), (55, 1, 'no', 'triple', 'no', '155'), (56, 1, 'no', 'double', 'no', '175'), (57, 1, 'yes', 'single', 'yes', '145'), (58, 1, 'yes', 'double', 'yes', '165'), (59, 1, 'yes', 'single', 'no', '150'), (60, 1, 'yes', 'triple', 'no', '170'), (61, 1, 'no', 'single', 'yes', '155'), (62, 1, 'no', 'double', 'yes', '175'), (63, 1, 'no', 'triple', 'no', '160'), (64, 1, 'no', 'double', 'no', '180'), (1, 2, 'yes', 'single', 'yes', '100'), (2, 2, 'yes', 'double', 'yes', '120'), (3, 2, 'yes', 'single', 'no', '105'), (4, 2, 'yes', 'double', 'no', '125'), (5, 2, 'no', 'single', 'yes', '110'), (6, 2, 'no', 'triple', 'yes', '130'), (7, 2, 'no', 'single', 'no', '115'), (8, 2, 'no', 'double', 'no', '135'), (9, 2, 'yes', 'single', 'yes', '115'), (10,2, 'yes', 'triple', 'yes', '135'), (11, 2, 'yes', 'single', 'no', '120'), (12, 2, 'yes', 'double', 'no', '140'), (13, 2, 'no', 'single', 'yes', '125'), (14, 2, 'no', 'double', 'yes', '145'), (15, 2, 'no', 'single', 'no', '130'), (16, 2, 'no', 'triple', 'no', '150'), (17, 2, 'yes', 'single', 'yes', '105'), (18, 2, 'yes', 'double', 'yes', '125'), (19, 2, 'yes', 'single', 'no', '110'), (20, 2, 'yes', 'double', 'no', '130'), (21, 2, 'no', 'single', 'yes', '115'), (22, 2, 'no', 'triple', 'yes', '135'), (23, 2, 'no', 'single', 'no', '120'), (24, 2, 'no', 'double', 'no', '140'), (25, 2, 'yes', 'single', 'yes', '120'), (26, 2, 'yes', 'double', 'yes', '140'), (27, 2, 'yes', 'single', 'no', '125'), (28, 2, 'yes', 'double', 'no', '145'), (29, 2, 'no', 'triple', 'yes', '130'), (30, 2, 'no', 'double', 'yes', '150'), (31, 2, 'no', 'single', 'no', '135'), (32, 2, 'no', 'triple', 'no', '155'), (33, 2, 'yes', 'single', 'yes', '130'), (34, 2, 'yes', 'double', 'yes', '150'), (35, 2, 'yes', 'single', 'no', '135'), (36, 2, 'yes', 'double', 'no', '155'), (37, 2, 'no', 'single', 'yes', '140'), (38, 2, 'no', 'double', 'yes', '160'), (39, 2, 'no', 'single', 'no', '145'), (40, 2, 'no', 'triple', 'no', '165'), (41, 2, 'yes', 'single', 'yes', '135'), (42, 2, 'yes', 'double', 'yes', '155'), (43, 2, 'yes', 'single', 'no', '140'), (44, 2, 'yes', 'double', 'no', '160'), (45, 2, 'no', 'triple', 'yes', '145'), (46, 2, 'no', 'double', 'yes', '165'), (47, 2, 'no', 'single', 'no', '150'), (48, 2, 'no', 'double', 'no', '170'), (49, 2, 'yes', 'single', 'yes', '140'), (50, 2, 'yes', 'triple', 'yes', '160'), (51, 2, 'yes', 'single', 'no', '145'), (52, 2, 'yes', 'double', 'no', '165'), (53, 2, 'no', 'single', 'yes', '150'), (54, 2, 'no', 'double', 'yes', '170'), (55, 2, 'no', 'single', 'no', '155'), (56, 2, 'no', 'triple', 'no', '175'), (57, 2, 'yes', 'triple', 'yes', '145'), (58, 2, 'yes', 'double', 'yes', '165'), (59, 2, 'yes', 'single', 'no', '150'), (60, 2, 'yes', 'double', 'no', '170'), (61, 2, 'no', 'triple', 'yes', '155'), (62, 2, 'no', 'double', 'yes', '175'), (63, 2, 'no', 'single', 'no', '160'), (64, 2, 'no', 'double', 'no', '180'), (1, 11, 'yes', 'single', 'yes', '100'), (2, 11, 'yes', 'triple', 'yes', '120'), (3, 11, 'yes', 'single', 'no', '105'), (4, 11, 'yes', 'double', 'no', '125'), (5, 11, 'no', 'single', 'yes', '110'), (6, 11, 'no', 'double', 'yes', '130'), (7, 11, 'no', 'single', 'no', '115'), (8, 11, 'no', 'triple', 'no', '135'), (9, 11, 'yes', 'single', 'yes', '115'), (10, 11, 'yes', 'double', 'yes', '135'), (11, 11, 'yes', 'single', 'no', '120'), (12, 11, 'yes', 'double', 'no', '140'), (13, 11, 'no', 'single', 'yes', '125'), (14, 11, 'no', 'triple', 'yes', '145'), (15, 11, 'no', 'single', 'no', '130'), (16, 11, 'no', 'double', 'no', '150'), (17, 11, 'yes', 'single', 'yes', '105'), (18, 11, 'yes', 'double', 'yes', '125'), (19, 11, 'yes', 'single', 'no', '110'), (20, 11, 'yes', 'double', 'no', '130'), (21, 11, 'no', 'triple', 'yes', '115'), (22, 11, 'no', 'double', 'yes', '135'), (23, 11, 'no', 'single', 'no', '120'), (24, 11, 'no', 'double', 'no', '140'), (25, 11, 'yes', 'single', 'yes', '120'), (26, 11, 'yes', 'double', 'yes', '140'), (27, 11, 'yes', 'single', 'no', '125'), (28, 11, 'yes', 'triple', 'no', '145'), (29, 11, 'no', 'single', 'yes', '130'), (30, 11, 'no', 'double', 'yes', '150'), (31, 11, 'no', 'single', 'no', '135'), (32, 11, 'no', 'double', 'no', '155'), (33, 11, 'yes', 'single', 'yes', '130'), (34, 11, 'yes', 'triple', 'yes', '150'), (35, 11, 'yes', 'single', 'no', '135'), (36, 11, 'yes', 'double', 'no', '155'), (37, 11, 'no', 'single', 'yes', '140'), (38, 11, 'no', 'double', 'yes', '160'), (39, 11, 'no', 'single', 'no', '145'), (40, 11, 'no', 'double', 'no', '165'), (41, 11, 'yes', 'single', 'yes', '135'), (42, 11, 'yes', 'triple', 'yes', '155'), (43, 11, 'yes', 'single', 'no', '140'), (44, 11, 'yes', 'double', 'no', '160'), (45, 11, 'no', 'single', 'yes', '145'), (46, 11, 'no', 'double', 'yes', '165'), (47, 11, 'no', 'triple', 'no', '150'), (48, 11, 'no', 'double', 'no', '170'), (49, 11, 'yes', 'single', 'yes', '140'), (50, 11, 'yes', 'double', 'yes', '160'), (51, 11, 'yes', 'single', 'no', '145'), (52, 11, 'yes', 'triple', 'no', '165'), (53, 11, 'no', 'single', 'yes', '150'), (54, 11, 'no', 'double', 'yes', '170'), (55, 11, 'no', 'single', 'no', '155'), (56, 11, 'no', 'triple', 'no', '175'), (57, 11, 'yes', 'single', 'yes', '145'), (58, 11, 'yes', 'double', 'yes', '165'), (59, 11, 'yes', 'single', 'no', '150'), (60, 11, 'yes', 'triple', 'no', '170'), (61, 11, 'no', 'triple', 'yes', '155'), (62, 11, 'no', 'double', 'yes', '175'), (63, 11, 'no', 'triple', 'no', '160'), (64, 11, 'no', 'double', 'no', '180');")
      cur.execute("INSERT INTO RoomAmenities (RoomNumber, HotelID, Amenities) VALUES (1, 1, 'TV'), (1, 1, 'AC'), (1, 1, 'Fridge'), (1, 1, 'Balcony'), (2, 1, 'TV'), (2, 1, 'AC'), (2, 1, 'Fridge'), (2, 1, 'No Balcony'), (3, 1, 'TV'), (3, 1, 'AC'), (3, 1, 'No Fridge'), (3, 1, 'Balcony'), (4, 1, 'TV'), (4, 1, 'AC'), (4, 1, 'No Fridge'), (4, 1, 'No Balcony'), (5, 1, 'TV'), (5, 1, 'No AC'), (5, 1, 'Fridge'), (5, 1, 'Balcony'), (6, 1, 'TV'), (6, 1, 'No AC'), (6, 1, 'Fridge'), (6, 1, 'No Balcony'), (7, 1, 'TV'), (7, 1, 'No AC'), (7, 1, 'No Fridge'), (7, 1, 'Balcony'), (8, 1, 'TV'), (8, 1, 'No AC'), (8, 1, 'No Fridge'), (8, 1, 'No Balcony'), (9, 1, 'No TV'), (9, 1, 'AC'), (9, 1, 'Fridge'), (9, 1, 'Balcony'), (10, 1, 'No TV'), (10, 1, 'AC'), (10, 1, 'Fridge'), (10, 1, 'No Balcony'), (11, 1, 'No TV'), (11, 1, 'AC'), (11, 1, 'No Fridge'), (11, 1, 'Balcony'), (12, 1, 'No TV'), (12, 1, 'AC'), (12, 1, 'No Fridge'), (12, 1, 'No Balcony'), (13, 1, 'No TV'), (13, 1, 'No AC'), (13, 1, 'Fridge'), (13, 1, 'Balcony'), (14, 1, 'No TV'), (14, 1, 'No AC'), (14, 1, 'Fridge'), (14, 1, 'No Balcony'), (15, 1, 'No TV'), (15, 1, 'No AC'), (15, 1, 'No Fridge'), (15, 1, 'Balcony'), (16, 1, 'No TV'), (16, 1, 'No AC'), (16, 1, 'No Fridge'), (16, 1, 'No Balcony'), (17, 1, 'TV'), (17, 1, 'AC'), (17, 1, 'Fridge'), (17, 1, 'Balcony'), (18, 1, 'TV'), (18, 1, 'AC'), (18, 1, 'Fridge'), (18, 1, 'No Balcony'), (19, 1, 'TV'), (19, 1, 'AC'), (19, 1, 'No Fridge'), (19, 1, 'Balcony'), (20, 1, 'TV'), (20, 1, 'AC'), (20, 1, 'No Fridge'), (20, 1, 'No Balcony'), (21, 1, 'TV'), (21, 1, 'No AC'), (21, 1, 'Fridge'), (21, 1, 'Balcony'), (22, 1, 'TV'), (22, 1, 'No AC'), (22, 1, 'Fridge'), (22, 1, 'No Balcony'), (23, 1, 'TV'), (23, 1, 'No AC'), (23, 1, 'No Fridge'), (23, 1, 'Balcony'), (24, 1, 'TV'), (24, 1, 'No AC'), (24, 1, 'No Fridge'), (24, 1, 'No Balcony'), (25, 1, 'No TV'), (25, 1, 'AC'), (25, 1, 'Fridge'), (25, 1, 'Balcony'), (26, 1, 'No TV'), (26, 1, 'AC'), (26, 1, 'Fridge'), (26, 1, 'No Balcony'), (27, 1, 'No TV'), (27, 1, 'AC'), (27, 1, 'No Fridge'), (27, 1, 'Balcony'), (28, 1, 'No TV'), (28, 1, 'AC'), (28, 1, 'No Fridge'), (28, 1, 'No Balcony'), (29, 1, 'No TV'), (29, 1, 'No AC'), (29, 1, 'Fridge'), (29, 1, 'Balcony'), (30, 1, 'No TV'), (30, 1, 'No AC'), (30, 1, 'Fridge'), (30, 1, 'No Balcony'), (31, 1, 'No TV'), (31, 1, 'No AC'), (31, 1, 'No Fridge'), (31, 1, 'Balcony'), (32, 1, 'No TV'), (32, 1, 'No AC'), (32, 1, 'No Fridge'), (32, 1, 'No Balcony'), (33, 1, 'TV'), (33, 1, 'AC'), (33, 1, 'Fridge'), (33, 1, 'Balcony'), (34, 1, 'TV'), (34, 1, 'AC'), (34, 1, 'Fridge'), (34, 1, 'No Balcony'), (35, 1, 'TV'), (35, 1, 'AC'), (35, 1, 'No Fridge'), (35, 1, 'Balcony'), (36, 1, 'TV'), (36, 1, 'AC'), (36, 1, 'No Fridge'), (36, 1, 'No Balcony'), (37, 1, 'TV'), (37, 1, 'No AC'), (37, 1, 'Fridge'), (37, 1, 'Balcony'), (38, 1, 'TV'), (38, 1, 'No AC'), (38, 1, 'Fridge'), (38, 1, 'No Balcony'), (39, 1, 'TV'), (39, 1, 'No AC'), (39, 1, 'No Fridge'), (39, 1, 'Balcony'), (40, 1, 'TV'), (40, 1, 'No AC'), (40, 1, 'No Fridge'), (40, 1, 'No Balcony'), (41, 1, 'No TV'), (41, 1, 'AC'), (41, 1, 'Fridge'), (41, 1, 'Balcony'), (42, 1, 'No TV'), (42, 1, 'AC'), (42, 1, 'Fridge'), (42, 1, 'No Balcony'), (43, 1, 'No TV'), (43, 1, 'AC'), (43, 1, 'No Fridge'), (43, 1, 'Balcony'), (44, 1, 'No TV'), (44, 1, 'AC'), (44, 1, 'No Fridge'), (44, 1, 'No Balcony'), (45, 1, 'No TV'), (45, 1, 'No AC'), (45, 1, 'Fridge'), (45, 1, 'Balcony'), (46, 1, 'No TV'), (46, 1, 'No AC'), (46, 1, 'Fridge'), (46, 1, 'No Balcony'), (47, 1, 'No TV'), (47, 1, 'No AC'), (47, 1, 'No Fridge'), (47, 1, 'Balcony'), (48, 1, 'No TV'), (48, 1, 'No AC'), (48, 1, 'No Fridge'), (48, 1, 'No Balcony'), (49, 1, 'TV'), (49, 1, 'AC'), (49, 1, 'Fridge'), (49, 1, 'Balcony'), (50, 1, 'TV'), (50, 1, 'AC'), (50, 1, 'Fridge'), (50, 1, 'No Balcony'), (51, 1, 'TV'), (51, 1, 'AC'), (51, 1, 'No Fridge'), (51, 1, 'Balcony'), (52, 1, 'TV'), (52, 1, 'AC'), (52, 1, 'No Fridge'), (52, 1, 'No Balcony'), (53, 1, 'TV'), (53, 1, 'No AC'), (53, 1, 'Fridge'), (53, 1, 'Balcony'), (54, 1, 'TV'), (54, 1, 'No AC'), (54, 1, 'Fridge'), (54, 1, 'No Balcony'), (55, 1, 'TV'), (55, 1, 'No AC'), (55, 1, 'No Fridge'), (55, 1, 'Balcony'), (56, 1, 'TV'), (56, 1, 'No AC'), (56, 1, 'No Fridge'), (56, 1, 'No Balcony'), (57, 1, 'No TV'), (57, 1, 'AC'), (57, 1, 'Fridge'), (57, 1, 'Balcony'), (58, 1, 'No TV'), (58, 1, 'AC'), (58, 1, 'Fridge'), (58, 1, 'No Balcony'), (59, 1, 'No TV'), (59, 1, 'AC'), (59, 1, 'No Fridge'), (59, 1, 'Balcony'), (60, 1, 'No TV'), (60, 1, 'AC'), (60, 1, 'No Fridge'), (60, 1, 'No Balcony'), (61, 1, 'No TV'), (61, 1, 'No AC'), (61, 1, 'Fridge'), (61, 1, 'Balcony'), (62, 1, 'No TV'), (62, 1, 'No AC'), (62, 1, 'Fridge'), (62, 1, 'No Balcony'), (63, 1, 'No TV'), (63, 1, 'No AC'), (63, 1, 'No Fridge'), (63, 1, 'Balcony'), (64, 1, 'No TV'), (64, 1, 'No AC'), (64, 1, 'No Fridge'), (64, 1, 'No Balcony');")
      cur.execute("INSERT INTO RoomAmenities (RoomNumber, HotelID, Amenities) VALUES (1, 11, 'TV'), (1, 11, 'AC'), (1, 11, 'Fridge'), (1, 11, 'Balcony'), (2, 11, 'TV'), (2, 11, 'AC'), (2, 11, 'Fridge'), (2, 11, 'No Balcony'), (3, 11, 'TV'), (3, 11, 'AC'), (3, 11, 'No Fridge'), (3, 11, 'Balcony'), (4, 11, 'TV'), (4, 11, 'AC'), (4, 11, 'No Fridge'), (4, 11, 'No Balcony'), (5, 11, 'TV'), (5, 11, 'No AC'), (5, 11, 'Fridge'), (5, 11, 'Balcony'), (6, 11, 'TV'), (6, 11, 'No AC'), (6, 11, 'Fridge'), (6, 11, 'No Balcony'), (7, 11, 'TV'), (7, 11, 'No AC'), (7, 11, 'No Fridge'), (7, 11, 'Balcony'), (8, 11, 'TV'), (8, 11, 'No AC'), (8, 11, 'No Fridge'), (8, 11, 'No Balcony'), (9, 11, 'No TV'), (9, 11, 'AC'), (9, 11, 'Fridge'), (9, 11, 'Balcony'), (10, 11, 'No TV'), (10, 11, 'AC'), (10, 11, 'Fridge'), (10, 11, 'No Balcony'), (11, 11, 'No TV'), (11, 11, 'AC'), (11, 11, 'No Fridge'), (11, 11, 'Balcony'), (12, 11, 'No TV'), (12, 11, 'AC'), (12, 11, 'No Fridge'), (12, 11, 'No Balcony'), (13, 11, 'No TV'), (13, 11, 'No AC'), (13, 11, 'Fridge'), (13, 11, 'Balcony'), (14, 11, 'No TV'), (14, 11, 'No AC'), (14, 11, 'Fridge'), (14, 11, 'No Balcony'), (15, 11, 'No TV'), (15, 11, 'No AC'), (15, 11, 'No Fridge'), (15, 11, 'Balcony'), (16, 11, 'No TV'), (16, 11, 'No AC'), (16, 11, 'No Fridge'), (16, 11, 'No Balcony'), (17, 11, 'TV'), (17, 11, 'AC'), (17, 11, 'Fridge'), (17, 11, 'Balcony'), (18, 11, 'TV'), (18, 11, 'AC'), (18, 11, 'Fridge'), (18, 11, 'No Balcony'), (19, 11, 'TV'), (19, 11, 'AC'), (19, 11, 'No Fridge'), (19, 11, 'Balcony'), (20, 11, 'TV'), (20, 11, 'AC'), (20, 11, 'No Fridge'), (20, 11, 'No Balcony'), (21, 11, 'TV'), (21, 11, 'No AC'), (21, 11, 'Fridge'), (21, 11, 'Balcony'), (22, 11, 'TV'), (22, 11, 'No AC'), (22, 11, 'Fridge'), (22, 11, 'No Balcony'), (23, 11, 'TV'), (23, 11, 'No AC'), (23, 11, 'No Fridge'), (23, 11, 'Balcony'), (24, 11, 'TV'), (24, 11, 'No AC'), (24, 11, 'No Fridge'), (24, 11, 'No Balcony'), (25, 11, 'No TV'), (25, 11, 'AC'), (25, 11, 'Fridge'), (25, 11, 'Balcony'), (26, 11, 'No TV'), (26, 11, 'AC'), (26, 11, 'Fridge'), (26, 11, 'No Balcony'), (27, 11, 'No TV'), (27, 11, 'AC'), (27, 11, 'No Fridge'), (27, 11, 'Balcony'), (28, 11, 'No TV'), (28, 11, 'AC'), (28, 11, 'No Fridge'), (28, 11, 'No Balcony'), (29, 11, 'No TV'), (29, 11, 'No AC'), (29, 11, 'Fridge'), (29, 11, 'Balcony'), (30, 11, 'No TV'), (30, 11, 'No AC'), (30, 11, 'Fridge'), (30, 11, 'No Balcony'), (31, 11, 'No TV'), (31, 11, 'No AC'), (31, 11, 'No Fridge'), (31, 11, 'Balcony'), (32, 11, 'No TV'), (32, 11, 'No AC'), (32, 11, 'No Fridge'), (32, 11, 'No Balcony'), (33, 11, 'TV'), (33, 11, 'AC'), (33, 11, 'Fridge'), (33, 11, 'Balcony'), (34, 11, 'TV'), (34, 11, 'AC'), (34, 11, 'Fridge'), (34, 11, 'No Balcony'), (35, 11, 'TV'), (35, 11, 'AC'), (35, 11, 'No Fridge'), (35, 11, 'Balcony'), (36, 11, 'TV'), (36, 11, 'AC'), (36, 11, 'No Fridge'), (36, 11, 'No Balcony'), (37, 11, 'TV'), (37, 11, 'No AC'), (37, 11, 'Fridge'), (37, 11, 'Balcony'), (38, 11, 'TV'), (38, 11, 'No AC'), (38, 11, 'Fridge'), (38, 11, 'No Balcony'), (39, 11, 'TV'), (39, 11, 'No AC'), (39, 11, 'No Fridge'), (39, 11, 'Balcony'), (40, 11, 'TV'), (40, 11, 'No AC'), (40, 11, 'No Fridge'), (40, 11, 'No Balcony'), (41, 11, 'No TV'), (41, 11, 'AC'), (41, 11, 'Fridge'), (41, 11, 'Balcony'), (42, 11, 'No TV'), (42, 11, 'AC'), (42, 11, 'Fridge'), (42, 11, 'No Balcony'), (43, 11, 'No TV'), (43, 11, 'AC'), (43, 11, 'No Fridge'), (43, 11, 'Balcony'), (44, 11, 'No TV'), (44, 11, 'AC'), (44, 11, 'No Fridge'), (44, 11, 'No Balcony'), (45, 11, 'No TV'), (45, 11, 'No AC'), (45, 11, 'Fridge'), (45, 11, 'Balcony'), (46, 11, 'No TV'), (46, 11, 'No AC'), (46, 11, 'Fridge'), (46, 11, 'No Balcony'), (47, 11, 'No TV'), (47, 11, 'No AC'), (47, 11, 'No Fridge'), (47, 11, 'Balcony'), (48, 11, 'No TV'), (48, 11, 'No AC'), (48, 11, 'No Fridge'), (48, 11, 'No Balcony'), (49, 11, 'TV'), (49, 11, 'AC'), (49, 11, 'Fridge'), (49, 11, 'Balcony'), (50, 11, 'TV'), (50, 11, 'AC'), (50, 11, 'Fridge'), (50, 11, 'No Balcony'), (51, 11, 'TV'), (51, 11, 'AC'), (51, 11, 'No Fridge'), (51, 11, 'Balcony'), (52, 11, 'TV'), (52, 11, 'AC'), (52, 11, 'No Fridge'), (52, 11, 'No Balcony'), (53, 11, 'TV'), (53, 11, 'No AC'), (53, 11, 'Fridge'), (53, 11, 'Balcony'), (54, 11, 'TV'), (54, 11, 'No AC'), (54, 11, 'Fridge'), (54, 11, 'No Balcony'), (55, 11, 'TV'), (55, 11, 'No AC'), (55, 11, 'No Fridge'), (55, 11, 'Balcony'), (56, 11, 'TV'), (56, 11, 'No AC'), (56, 11, 'No Fridge'), (56, 11, 'No Balcony'), (57, 11, 'No TV'), (57, 11, 'AC'), (57, 11, 'Fridge'), (57, 11, 'Balcony'), (58, 11, 'No TV'), (58, 11, 'AC'), (58, 11, 'Fridge'), (58, 11, 'No Balcony'), (59, 11, 'No TV'), (59, 11, 'AC'), (59, 11, 'No Fridge'), (59, 11, 'Balcony'), (60, 11, 'No TV'), (60, 11, 'AC'), (60, 11, 'No Fridge'), (60, 11, 'No Balcony'), (61, 11, 'No TV'), (61, 11, 'No AC'), (61, 11, 'Fridge'), (61, 11, 'Balcony'), (62, 11, 'No TV'), (62, 11, 'No AC'), (62, 11, 'Fridge'), (62, 11, 'No Balcony'), (63, 11, 'No TV'), (63, 11, 'No AC'), (63, 11, 'No Fridge'), (63, 11, 'Balcony'), (64, 11, 'No TV'), (64, 11, 'No AC'), (64, 11, 'No Fridge'), (64, 11, 'No Balcony');")
      cur.execute("INSERT INTO Employee (EmployeeSSN, HotelID, FirstName, LastName, Street, City, Province, PostalCode, Position) VALUES (101, 1, 'John', 'Smith', '123 Main St', 'Toronto', 'ON', 'M1N2P3', 'Manager'), (102, 1, 'Emily', 'Johnson', '456 Maple Ave', 'Toronto', 'ON', 'Q4R5S6', 'Front Desk'), (103, 1, 'Daniel', 'Martinez', '789 Pine St', 'Toronto', 'ON', 'T7U8V9', 'Housekeeping'), (104, 1, 'Sarah', 'Garcia', '987 Birch Blvd', 'Toronto', 'ON', 'W1X2Y3', 'Maintenance');")
      cur.execute("INSERT INTO Employee_PhoneNumber (EmployeeSSN, PhoneNumber) VALUES (101, '111-222-3333'), (102, '222-333-4444'), (103, '333-444-5555'), (104, '444-555-6666');")
      cur.execute("INSERT INTO Employee (EmployeeSSN, HotelID, FirstName, LastName, Street, City, Province, PostalCode, Position) VALUES (105, 2, 'James', 'Brown', '111 Apple Rd', 'Vancouver', 'BC', 'X1Y2Z3', 'Manager'), (106, 2, 'Olivia', 'Williams', '222 Banana St', 'Vancouver', 'BC', 'A2B3C4', 'Front Desk'), (107, 2, 'William', 'Jackson', '333 Cherry Ave', 'Vancouver', 'BC', 'D3E4F5', 'Housekeeping'), (108, 2, 'Emma', 'Taylor', '444 Grape Blvd', 'Vancouver', 'BC', 'G4H5I6', 'Maintenance');")
      cur.execute("INSERT INTO Employee_PhoneNumber (EmployeeSSN, PhoneNumber) VALUES (105, '555-666-7777'), (106, '666-777-8888'), (107, '777-888-9999'), (108, '888-999-0000');")
      cur.execute("INSERT INTO Employee (EmployeeSSN, HotelID, FirstName, LastName, Street, City, Province, PostalCode, Position) VALUES (109, 3, 'Michael', 'Davis', '11 Orange St', 'Montreal', 'QC', 'L1M2N3', 'Manager'), (110, 3, 'Sophia', 'Martinez', '22 Lemon Blvd', 'Montreal', 'QC', 'O2P3Q4', 'Front Desk'), (111, 3, 'Jacob', 'Garcia', '33 Lime Ave', 'Montreal', 'QC', 'R3S4T5', 'Housekeeping'), (112, 3, 'Isabella', 'Wilson', '44 Grapefruit Ln', 'Montreal', 'QC', 'U4V5W6', 'Maintenance');")
      cur.execute("INSERT INTO Employee_PhoneNumber (EmployeeSSN, PhoneNumber) VALUES (109, '111-222-3333'), (110, '222-333-4444'), (111, '333-444-5555'), (112, '444-555-6666');")
      cur.execute("INSERT INTO Room (RoomNumber, HotelID, Extendable, Capacity, SeaView, Price) VALUES (1, 1, 'yes', 'single', 'yes', '100'),(2, 1, 'yes', 'double', 'yes', '120'), (3, 1, 'yes', 'single', 'no', '105'),(4, 1, 'yes', 'triple', 'no', '125'),(5, 1, 'no', 'single', 'yes', '110'),(6, 1, 'no', 'double', 'yes', '130'),(7, 1, 'no', 'single', 'no', '115'),(8, 1, 'no', 'triple', 'no', '135'),(9, 1, 'yes', 'single', 'yes', '115'),(10,1, 'yes', 'double', 'yes', '135'),(11,1, 'yes', 'triple', 'no', '120'),(12,1, 'yes', 'double', 'no', '140'),(13,1, 'no', 'single', 'yes', '125'),(14, 1, 'no', 'triple', 'yes', '145'),(15, 1, 'no', 'single', 'no', '130'),(16, 1, 'no', 'double', 'no', '150'),(17, 1, 'yes', 'single', 'yes', '105'),(18, 1, 'yes', 'double', 'yes', '125'),(19, 1, 'yes', 'single', 'no', '110'),(20, 1, 'yes', 'double', 'no', '130'),(21, 1, 'no', 'triple', 'yes', '115'),(22, 1, 'no', 'double', 'yes', '135'),(23, 1, 'no', 'single', 'no', '120'),(24, 1, 'no', 'double', 'no', '140'),(25, 1, 'yes', 'single', 'yes', '120'),(26, 1, 'yes', 'triple', 'yes', '140'),(27, 1, 'yes', 'single', 'no', '125'),(28, 1, 'yes', 'double', 'no', '145'),(29, 1, 'no', 'single', 'yes', '130'),(30, 1, 'no', 'double', 'yes', '150'),(31, 1, 'no', 'triple', 'no', '135'),(32, 1, 'no', 'double', 'no', '155'),(33, 1, 'yes', 'single', 'yes', '130'),(34, 1, 'yes', 'double', 'yes', '150'),(35, 1, 'yes', 'triple', 'no', '135'),(36, 1, 'yes', 'double', 'no', '155'),(37, 1, 'no', 'single', 'yes', '140'),(38, 1, 'no', 'double', 'yes', '160'),(39, 1, 'no', 'triple', 'no', '145'),(40, 1, 'no', 'double', 'no', '165'),(41, 1, 'yes', 'single', 'yes', '135'),(42, 1, 'yes', 'double', 'yes', '155'),(43, 1, 'yes', 'single', 'no', '140'),(44, 1, 'yes', 'triple', 'no', '160'),(45, 1, 'no', 'single', 'yes', '145'),(46, 1, 'no', 'double', 'yes', '165'), (47, 1, 'no', 'single', 'no', '150'), (48, 1, 'no', 'triple', 'no', '170'),(49, 1, 'yes', 'single', 'yes', '140'),(50, 1, 'yes', 'double', 'yes', '160'),(51, 1, 'yes', 'single', 'no', '145'),(52, 1, 'yes', 'triple', 'no', '165'),(53, 1, 'no', 'single', 'yes', '150'),(54, 1, 'no', 'double', 'yes', '170'),(55, 1, 'no', 'triple', 'no', '155'),(56, 1, 'no', 'double', 'no', '175'),(57, 1, 'yes', 'single', 'yes', '145'),(58, 1, 'yes', 'double', 'yes', '165'),(59, 1, 'yes', 'single', 'no', '150'),(60, 1, 'yes', 'triple', 'no', '170'),(61, 1, 'no', 'single', 'yes', '155'),(62, 1, 'no', 'double', 'yes', '175'),(63, 1, 'no', 'triple', 'no', '160'),(64, 1, 'no', 'double', 'no', '180'),(1, 11, 'yes', 'single', 'yes', '100'),(2, 11, 'yes', 'triple', 'yes', '120'),(3, 11, 'yes', 'single', 'no', '105'),(4, 11, 'yes', 'double', 'no', '125'),(5, 11, 'no', 'single', 'yes', '110'),(6, 11, 'no', 'double', 'yes', '130'),(7, 11, 'no', 'single', 'no', '115'),(8, 11, 'no', 'triple', 'no', '135'),(9, 11, 'yes', 'single', 'yes', '115'),(10, 11, 'yes', 'double', 'yes', '135'),(11, 11, 'yes', 'single', 'no', '120'),(12, 11, 'yes', 'double', 'no', '140'),(13, 11, 'no', 'single', 'yes', '125'),(14, 11, 'no', 'triple', 'yes', '145'),(15, 11, 'no', 'single', 'no', '130'),(16, 11, 'no', 'double', 'no', '150'),(17, 11, 'yes', 'single', 'yes', '105'),(18, 11, 'yes', 'double', 'yes', '125'),(19, 11, 'yes', 'single', 'no', '110'),(20, 11, 'yes', 'double', 'no', '130'),(21, 11, 'no', 'triple', 'yes', '115'),(22, 11, 'no', 'double', 'yes', '135'),(23, 11, 'no', 'single', 'no', '120'),(24, 11, 'no', 'double', 'no', '140'),(25, 11, 'yes', 'single', 'yes', '120'),(26, 11, 'yes', 'double', 'yes', '140'),(27, 11, 'yes', 'single', 'no', '125'),(28, 11, 'yes', 'triple', 'no', '145'),(29, 11, 'no', 'single', 'yes', '130'),(30, 11, 'no', 'double', 'yes', '150'),(31, 11, 'no', 'single', 'no', '135'),(32, 11, 'no', 'double', 'no', '155'),(33, 11, 'yes', 'single', 'yes', '130'),(34, 11, 'yes', 'triple', 'yes', '150'),(35, 11, 'yes', 'single', 'no', '135'),(36, 11, 'yes', 'double', 'no', '155'),(37, 11, 'no', 'single', 'yes', '140'),(38, 11, 'no', 'double', 'yes', '160'),(39, 11, 'no', 'single', 'no', '145'),(40, 11, 'no', 'double', 'no', '165'),(41, 11, 'yes', 'single', 'yes', '135'),(42, 11, 'yes', 'triple', 'yes', '155'),(43, 11, 'yes', 'single', 'no', '140'),(44, 11, 'yes', 'double', 'no', '160'),(45, 11, 'no', 'single', 'yes', '145'),(46, 11, 'no', 'double', 'yes', '165'),(47, 11, 'no', 'triple', 'no', '150'),(48, 11, 'no', 'double', 'no', '170'),(49, 11, 'yes', 'single', 'yes', '140'),(50, 11, 'yes', 'double', 'yes', '160'),(51, 11, 'yes', 'single', 'no', '145'),(52, 11, 'yes', 'triple', 'no', '165'),(53, 11, 'no', 'single', 'yes', '150'),(54, 11, 'no', 'double', 'yes', '170'),(55, 11, 'no', 'single', 'no', '155'),(56, 11, 'no', 'triple', 'no', '175'),(57, 11, 'yes', 'single', 'yes', '145'),(58, 11, 'yes', 'double', 'yes', '165'),(59, 11, 'yes', 'single', 'no', '150'),(60, 11, 'yes', 'triple', 'no', '170'),(61, 11, 'no', 'triple', 'yes', '155'),(62, 11, 'no', 'double', 'yes', '175'),(63, 11, 'no', 'triple', 'no', '160'),(64, 11, 'no', 'double', 'no', '180');")
      cur.execute("Insert data into the RoomAmenities table for Hotel ID 1 INSERT INTO RoomAmenities (RoomNumber, HotelID, Amenities) VALUES(1, 1, 'TV'),(1, 1, 'AC'),(1, 1, 'Fridge'),(1, 1, 'Balcony'),(2, 1, 'TV'),(2, 1, 'AC'),(2, 1, 'Fridge'),(2, 1, 'No Balcony'),(3, 1, 'TV'),(3, 1, 'AC'),(3, 1, 'No Fridge'),(3, 1, 'Balcony'),(4, 1, 'TV'),(4, 1, 'AC'),(4, 1, 'No Fridge'),(4, 1, 'No Balcony'),(5, 1, 'TV'),(5, 1, 'No AC'),(5, 1, 'Fridge'),(5, 1, 'Balcony'),(6, 1, 'TV'),(6, 1, 'No AC'),(6, 1, 'Fridge'),(6, 1, 'No Balcony'),(7, 1, 'TV'),(7, 1, 'No AC'),(7, 1, 'No Fridge'),(7, 1, 'Balcony'),(8, 1, 'TV'),(8, 1, 'No AC'),(8, 1, 'No Fridge'),(8, 1, 'No Balcony'),(9, 1, 'No TV'),(9, 1, 'AC'),(9, 1, 'Fridge'),(9, 1, 'Balcony'),(10, 1, 'No TV'),(10, 1, 'AC'),(10, 1, 'Fridge'),(10, 1, 'No Balcony'),(11, 1, 'No TV'),(11, 1, 'AC'),(11, 1, 'No Fridge'),(11, 1, 'Balcony'),(12, 1, 'No TV'),(12, 1, 'AC'),(12, 1, 'No Fridge'),(12, 1, 'No Balcony'),(13, 1, 'No TV'),(13, 1, 'No AC'),(13, 1, 'Fridge'),(13, 1, 'Balcony'),(14, 1, 'No TV'),(14, 1, 'No AC'),(14, 1, 'Fridge'),(14, 1, 'No Balcony'),(15, 1, 'No TV'),(15, 1, 'No AC'),(15, 1, 'No Fridge'),(15, 1, 'Balcony'),(16, 1, 'No TV'),(16, 1, 'No AC'),(16, 1, 'No Fridge'),(16, 1, 'No Balcony'),(17, 1, 'TV'),(17, 1, 'AC'),(17, 1, 'Fridge'),(17, 1, 'Balcony'),(18, 1, 'TV'),(18, 1, 'AC'),(18, 1, 'Fridge'),(18, 1, 'No Balcony'),(19, 1, 'TV'),(19, 1, 'AC'),(19, 1, 'No Fridge'),(19, 1, 'Balcony'),(20, 1, 'TV'),(20, 1, 'AC'),(20, 1, 'No Fridge'),(20, 1, 'No Balcony'),(21, 1, 'TV'),(21, 1, 'No AC'),(21, 1, 'Fridge'),(21, 1, 'Balcony'),(22, 1, 'TV'),(22, 1, 'No AC'),(22, 1, 'Fridge'),(22, 1, 'No Balcony'),(23, 1, 'TV'),(23, 1, 'No AC'),(23, 1, 'No Fridge'),(23, 1, 'Balcony'),(24, 1, 'TV'),(24, 1, 'No AC'),(24, 1, 'No Fridge'),(24, 1, 'No Balcony'),(25, 1, 'No TV'),(25, 1, 'AC'),(25, 1, 'Fridge'),(25, 1, 'Balcony'),(26, 1, 'No TV'),(26, 1, 'AC'),(26, 1, 'Fridge'),(26, 1, 'No Balcony'),(27, 1, 'No TV'),(27, 1, 'AC'),(27, 1, 'No Fridge'),(27, 1, 'Balcony'),(28, 1, 'No TV'),(28, 1, 'AC'),(28, 1, 'No Fridge'),(28, 1, 'No Balcony'),(29, 1, 'No TV'),(29, 1, 'No AC'),(29, 1, 'Fridge'),(29, 1, 'Balcony'),(30, 1, 'No TV'),(30, 1, 'No AC'),(30, 1, 'Fridge'),(30, 1, 'No Balcony'),(31, 1, 'No TV'),(31, 1, 'No AC'),(31, 1, 'No Fridge'),(31, 1, 'Balcony'),(32, 1, 'No TV'),(32, 1, 'No AC'),(32, 1, 'No Fridge'),(32, 1, 'No Balcony'),(33, 1, 'TV'),(33, 1, 'AC'),(33, 1, 'Fridge'),(33, 1, 'Balcony'),(34, 1, 'TV'),(34, 1, 'AC'),(34, 1, 'Fridge'),(34, 1, 'No Balcony'),(35, 1, 'TV'),(35, 1, 'AC'),(35, 1, 'No Fridge'),(35, 1, 'Balcony'),(36, 1, 'TV'),(36, 1, 'AC'),(36, 1, 'No Fridge'),(36, 1, 'No Balcony'),(37, 1, 'TV'),(37, 1, 'No AC'),(37, 1, 'Fridge'),(37, 1, 'Balcony'),(38, 1, 'TV'),(38, 1, 'No AC'),(38, 1, 'Fridge'),(38, 1, 'No Balcony'),(39, 1, 'TV'),(39, 1, 'No AC'),(39, 1, 'No Fridge'),(39, 1, 'Balcony'),(40, 1, 'TV'),(40, 1, 'No AC'),(40, 1, 'No Fridge'),(40, 1, 'No Balcony'),(41, 1, 'No TV'),(41, 1, 'AC'),(41, 1, 'Fridge'),(41, 1, 'Balcony'),(42, 1, 'No TV'),(42, 1, 'AC'),(42, 1, 'Fridge'),(42, 1, 'No Balcony'),(43, 1, 'No TV'),(43, 1, 'AC'),(43, 1, 'No Fridge'),(43, 1, 'Balcony'),(44, 1, 'No TV'),(44, 1, 'AC'),(44, 1, 'No Fridge'),(44, 1, 'No Balcony'),(45, 1, 'No TV'),(45, 1, 'No AC'),(45, 1, 'Fridge'),(45, 1, 'Balcony'),(46, 1, 'No TV'),(46, 1, 'No AC'),(46, 1, 'Fridge'),(46, 1, 'No Balcony'),(47, 1, 'No TV'),(47, 1, 'No AC'),(47, 1, 'No Fridge'),(47, 1, 'Balcony'),(48, 1, 'No TV'),(48, 1, 'No AC'),(48, 1, 'No Fridge'),(48, 1, 'No Balcony'),(49, 1, 'TV'),(49, 1, 'AC'),(49, 1, 'Fridge'),(49, 1, 'Balcony'),(50, 1, 'TV'),(50, 1, 'AC'),(50, 1, 'Fridge'),(50, 1, 'No Balcony'),(51, 1, 'TV'),(51, 1, 'AC'),(51, 1, 'No Fridge'),(51, 1, 'Balcony'),(52, 1, 'TV'),(52, 1, 'AC'),(52, 1, 'No Fridge'),(52, 1, 'No Balcony'),(53, 1, 'TV'),(53, 1, 'No AC'),(53, 1, 'Fridge'),(53, 1, 'Balcony'),(54, 1, 'TV'),(54, 1, 'No AC'),(54, 1, 'Fridge'),(54, 1, 'No Balcony'),(55, 1, 'TV'),(55, 1, 'No AC'),(55, 1, 'No Fridge'),(55, 1, 'Balcony'),(56, 1, 'TV'),(56, 1, 'No AC'),(56, 1, 'No Fridge'),(56, 1, 'No Balcony'),(57, 1, 'No TV'),(57, 1, 'AC'),(57, 1, 'Fridge'),(57, 1, 'Balcony'),(58, 1, 'No TV'),(58, 1, 'AC'),(58, 1, 'Fridge'),(58, 1, 'No Balcony'),(59, 1, 'No TV'),(59, 1, 'AC'),(59, 1, 'No Fridge'),(59, 1, 'Balcony'),(60, 1, 'No TV'),(60, 1, 'AC'),(60, 1, 'No Fridge'),(60, 1, 'No Balcony'),(61, 1, 'No TV'),(61, 1, 'No AC'),(61, 1, 'Fridge'),(61, 1, 'Balcony'),(62, 1, 'No TV'),(62, 1, 'No AC'),(62, 1, 'Fridge'),(62, 1, 'No Balcony'),(63, 1, 'No TV'),(63, 1, 'No AC'),(63, 1, 'No Fridge'),(63, 1, 'Balcony'),(64, 1, 'No TV'),(64, 1, 'No AC'),(64, 1, 'No Fridge'),(64, 1, 'No Balcony');")      
      conn.commit()
    else:
      print("LA DB est pleine")
  except psycopg2.Error as e:
    print("Error:", e)
  finally:
    cur.close()
    conn.close()

def droptables():
  conn=psycopg2.connect(database='eHotels',user='postgres',
                      password='postgres',host='localhost',port='5433')
  cur=conn.cursor()
  cur.execute("DROP SCHEMA public CASCADE;")
  cur.execute("CREATE SCHEMA public;")
  cur.close()
  conn.close()  

  